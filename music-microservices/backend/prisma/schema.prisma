// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String
  email String
}

model Author{
  id Int @id @default(autoincrement())
  name String
  songs Song[]
  albums Album[]
  coauthorIn Coauthors[]
}

model Coauthors{
  @@id([idAuthor,idSong])
  idAuthor Int
  author Author @relation(fields: [idAuthor],references: [id])
  idSong Int
  song Song @relation(fields: [idSong],references: [id])
}
model GenresSongs{
  @@id([idGenre,idSong])
  idGenre Int
  genre Genre @relation(fields: [idGenre],references: [id])
  idSong Int
  song Song @relation(fields: [idSong],references: [id])
}

model Album{
  id Int @id @default(autoincrement())
  name String
  year Int
  date DateTime
  idAuthor Int
  author Author @relation(fields: [idAuthor],references: [id])
  songs Song[]
}

model Genre{
  id Int @id @default(autoincrement())
  name String
  songs GenresSongs[]
}

model File{
  id Int @id @default(autoincrement())
  key String
  bucket String
  location String
  songs Song[]
}

model Song{
  id Int @id @default(autoincrement())
  title String
  genres GenresSongs[]
  authorId Int
  author Author @relation(fields: [authorId],references: [id])
  coauthors Coauthors[]
  fileId Int?
  file File? @relation(fields: [fileId],references: [id])
  albumId Int?
  album Album? @relation(fields: [albumId],references: [id])
}
